"""full scheme

Revision ID: 753a427d0c04
Revises: 
Create Date: 2025-07-25 01:54:31.817845

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '753a427d0c04'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('orders')
    op.drop_table('orderItems')
    op.drop_table('sellers')
    op.drop_table('buyers')
    op.drop_table('products')
    op.drop_table('cartItems')
    # ### end Alembic commands ###



def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cartItems',
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('productID', sa.INTEGER(), nullable=False),
    sa.Column('buyerID', sa.INTEGER(), nullable=True),
    sa.CheckConstraint('quantity >= 1', name=op.f('min_cartItem_quantity')),
    sa.ForeignKeyConstraint(['buyerID'], ['buyers.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['productID'], ['products.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('productID', 'buyerID')
    )
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=40), nullable=False),
    sa.Column('description', sa.VARCHAR(length=200), nullable=False),
    sa.Column('price', sa.FLOAT(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('imgPath', sa.VARCHAR(), nullable=True),
    sa.Column('cat', sa.VARCHAR(), nullable=False),
    sa.Column('sellerID', sa.INTEGER(), nullable=False),
    sa.CheckConstraint('price >= 1', name='min_product_price'),
    sa.CheckConstraint('quantity >= 0', name='min_product_quantity'),
    sa.ForeignKeyConstraint(['sellerID'], ['sellers.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('buyers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sellers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orderItems',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('buyPrice', sa.FLOAT(), nullable=False),
    sa.Column('productID', sa.INTEGER(), nullable=True),
    sa.Column('orderID', sa.INTEGER(), nullable=False),
    sa.CheckConstraint('quantity >= 1', name=op.f('min_orderItem_quantity')),
    sa.ForeignKeyConstraint(['orderID'], ['orders.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['productID'], ['products.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('orderDate', sa.DATE(), nullable=False),
    sa.Column('totalCost', sa.FLOAT(), nullable=False),
    sa.Column('buyerID', sa.INTEGER(), nullable=True),
    sa.CheckConstraint('totalCost >= 0', name=op.f('min_total_cost')),
    sa.ForeignKeyConstraint(['buyerID'], ['buyers.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('balance', sa.FLOAT(), nullable=True),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('password', sa.VARCHAR(), nullable=False),
    sa.Column('user_type', sa.VARCHAR(), nullable=False),
    sa.Column('phone', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=1)
    # ### end Alembic commands ###
